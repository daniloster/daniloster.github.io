{"version":3,"sources":["webpack:///./src/components/Animate/Animate.md"],"names":[],"mappings":"+EAAA,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAyDD,EAED,EAAE;;CAED","file":"38-8d9a3585d269750ada17.js","sourcesContent":["```jsx static\nimport React from 'react';\nimport uuid from 'uuid';\nimport PropTypes from 'prop-types';\nimport { createCustomAnimation }from 'react-animate-me';\n\n/**\n * Here is an example of keyframes where the state represents\n * the progress which can be set as [0-100]% or as keywords\n * (from, to), and the content is the styles applied to the\n * keyframe.\n * */\nconst FADE_PROGRESS = [\n  {\n    state: '0%',\n    content: 'position: relative; opacity: 0;',\n  },\n  {\n    state: '100%',\n    content: 'opacity: 1;',\n  },\n];\n\nfunction parseFadeEffect(props) {\n  return {\n    ...props,\n    animationName: 'fadeIn',\n    duration: 1,\n  };\n}\n\nconst FadeEffect = createCustomAnimation(parseFadeEffect, FADE_PROGRESS);\n\nexport default FadeEffect;\n\nFadeEffect.defaultProps = {\n  delay: 0,\n  maxAnimations: 1,\n};\n\nconst { useState } = React;\n\nexport default function FadeEffectApp({ maxAnimations }) {\n  const [hash, setHash] = useState(uuid.v4());\n  const onClick = () => { setHash(uuid.v4()); };\n\n  return (\n    <FadeEffect onClick={onClick}>\n      Hello! Click me \"{hash}\"\n    </FadeEffect>\n  );\n}\n\nFadeEffectApp.defaultProps = {\n  maxAnimations: Number.MAX_VALUE,\n};\n\n```\n\n```js\n<FadeEffectApp maxAnimations={3} />\n```"],"sourceRoot":""}