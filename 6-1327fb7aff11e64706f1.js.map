{"version":3,"sources":["webpack:///./src/articles/BoxModel.js"],"names":["codeTheme","Layout","styled","div","Article","brief","html","useState","sp1Overflow","setSp1Overflow","sp2Overflow","setSp2Overflow","sp3Overflow","setSp3Overflow","sp4Overflow","setSp4Overflow","href","target","name","theme","code","trim","className","style","overflow","type","onClick","val","width"],"mappings":"6FAAA,wKAUMA,EAAY,QAEZC,EAASC,IAAOC,IAAV,mEAAGD,CAAH,gZAmDG,SAASE,EAAT,GAAmC,IAAVC,EAAS,EAAfC,KAAe,EACTC,oBAAS,GAAxCC,EADwC,KAC3BC,EAD2B,OAETF,oBAAS,GAAxCG,EAFwC,KAE3BC,EAF2B,OAGTJ,oBAAS,GAAxCK,EAHwC,KAG3BC,EAH2B,OAITN,oBAAS,GAAxCO,EAJwC,KAI3BC,EAJ2B,KAK/C,OACE,kBAACd,EAAD,KACE,kBAAC,UAAD,KAAOI,GACP,kBAAC,UAAD,qKAIE,kBAAC,UAAD,CACEW,KAAK,mFACLC,OAAO,UAFT,OAJF,KAYA,kBAAC,UAAD,CAAKC,KAAK,gBACV,kBAAC,UAAD,qMAKA,kBAAC,UAAD,mBACA,kBAAC,UAAD,2NAGuE,IACrE,4CAJF,KAMA,4BACE,4BACE,kBAAC,UAAD,gCACA,kBAAC,UAAD,CACEC,MAAOnB,EACPoB,KAAM,qRAkBNC,SAEF,kBAAC,UAAD,CACEF,MAAOnB,EACPoB,KAAM,iHAIFC,SAEN,yBAAKC,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eAAf,gCAGJ,kBAAC,UAAD,+GAKA,kBAAC,UAAD,CACEH,MAAOnB,EACPoB,KAAM,0XAuBNC,SAEF,kBAAC,UAAD,CACEF,MAAOnB,EACPoB,KAAM,wHAIFC,SAEN,yBAAKC,UAAU,WACb,yBACEA,UAAU,YACVC,MAAK,iBAAQf,GAAe,CAAEgB,SAAU,UAExC,yBAAKF,UAAU,sBAAf,sCAIF,4BAAQG,KAAK,SAASC,QAAS,kBAAMjB,GAAe,SAAAkB,GAAG,OAAKA,OACzDnB,EACG,mDACA,gDAIR,kBAAC,UAAD,CACEW,MAAOnB,EACPoB,KAAM,mYAuBNC,SAEF,kBAAC,UAAD,CACEF,MAAOnB,EACPoB,KAAM,0HAIFC,SAEN,yBAAKC,UAAU,WACb,yBACEA,UAAU,YACVC,MAAK,iBAAQb,GAAe,CAAEc,SAAU,UAExC,yBAAKF,UAAU,wBAAf,2CAIF,4BAAQG,KAAK,SAASC,QAAS,kBAAMf,GAAe,SAAAgB,GAAG,OAAKA,OACzDjB,EACG,mDACA,iDAIV,4BACE,kBAAC,UAAD,+BACA,kBAAC,UAAD,+GAEoC,+CAA6B,IAFjE,kIAI6D,IAC3D,mDALF,6CAQA,kBAAC,UAAD,KACE,yCADF,gCAE+B,+CAF/B,uEAKA,kBAAC,UAAD,CAAKQ,KAAK,sBACV,kBAAC,UAAD,qDAEA,kBAAC,UAAD,CACEC,MAAOnB,EACPoB,KAAM,wXAuBNC,SAEF,kBAAC,UAAD,CACEF,MAAOnB,EACPoB,KAAM,uHAIFC,SAEN,yBAAKC,UAAU,WACb,yBACEA,UAAU,YACVC,MAAK,iBAAQX,GAAe,CAAEY,SAAU,UAExC,yBAAKF,UAAU,qBAAf,sCAIF,4BAAQG,KAAK,SAASC,QAAS,kBAAMb,GAAe,SAAAc,GAAG,OAAKA,OACzDf,EACG,mDACA,+CAEN,iKAOF,kBAAC,UAAD,CACEO,MAAOnB,EACPoB,KAAM,iYAuBNC,SAEF,kBAAC,UAAD,CACEF,MAAOnB,EACPoB,KAAM,yHAIFC,SAEN,yBAAKC,UAAU,WACb,yBACEA,UAAU,YACVC,MAAK,iBAAQT,GAAe,CAAEU,SAAU,UAExC,yBAAKF,UAAU,uBAAf,2CAIF,4BAAQG,KAAK,SAASC,QAAS,kBAAMX,GAAe,SAAAY,GAAG,OAAKA,OACzDb,EACG,mDACA,+CAEN,mKAQN,kBAAC,UAAD,mPAKE,kBAAC,UAAD,CACEE,KAAK,8DACLC,OAAO,UAFT,OALF,KAaA,kBAAC,UAAD,gBACA,kBAAC,UAAD,2OAIqB,iDAJrB,8EAOA,kBAAC,UAAD,CACEE,MAAOnB,EACPoB,KAAM,2gBAgCFC,SAEN,kBAAC,UAAD,CACEF,MAAOnB,EACPoB,KAAM,+JAIEC,SAEV,yBAAKC,UAAU,WACb,yBAAKA,UAAU,sBACb,yBACEA,UAAU,6BACVC,MAAO,CAAEK,MAAO,UAFlB,uCAQJ,kBAAC,UAAD,CACET,MAAOnB,EACPoB,KAAM,kjBAoCFC,SAEN,kBAAC,UAAD,CACEF,MAAOnB,EACPoB,KAAM,4KAIEC,SAEV,yBAAKC,UAAU,WACb,yBAAKA,UAAU,sBACb,yBACEA,UAAU,0CACVC,MAAO,CAAEK,MAAO,UAFlB,4CAQJ,kBAAC,UAAD,CAAKV,KAAK,aACV,kBAAC,UAAD,mBACA,kBAAC,UAAD,aACO,8CADP,+EAEuC,IACrC,2DAHF,qFAIqD,IACnD,kBAAC,UAAD,CACEF,KAAK,8DACLC,OAAO,UAFT,iBAOF,kBAAC,UAAD,MACA,kBAAC,UAAD,KACE,kBAAC,UAAD,CACED,KAAK,mGACLC,OAAO,UAFT,2CAMA,kBAAC,UAAD,CACED,KAAK,mFACLC,OAAO,UAFT,iBAMA,kBAAC,UAAD,CACED,KAAK,8DACLC,OAAO,UAFT","file":"6-1327fb7aff11e64706f1.js","sourcesContent":["import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport Paragraph from \"../templates/components/Paragraph\"\nimport Subtitle from \"../templates/components/Subtitle\"\nimport References from \"../templates/components/References\"\nimport A from \"../templates/components/A\"\nimport Code from \"../templates/components/Code\"\nimport Img from \"../templates/components/Img\"\nimport Html from \"../templates/components/Html\"\n\nconst codeTheme = \"prism\"\n\nconst Layout = styled.div`\n  .wrapper {\n    border: 1px dotted darkgrey;\n    padding: 15px;\n  }\n\n  .wrapper + .wrapper {\n    margin-top: 15px;\n  }\n\n  .container {\n    position: relative;\n    height: 200px;\n    width: 200px;\n    background-color: blue;\n  }\n\n  .container > div {\n    /* either */\n    width: 100%;\n    /* or width: 200px; */\n    background-color: green;\n  }\n\n  .content-box {\n    box-sizing: content-box;\n  }\n\n  .padded {\n    /* this means 10px each direction (top, right, bottom, left) */\n    padding: 10px;\n  }\n\n  .bordered {\n    /* this means 5px each direction (top, right, bottom, left) */\n    border: 5px solid red;\n  }\n\n  .with-margins {\n    margin: 10px;\n  }\n\n  .overflow {\n    overflow: auto;\n  }\n\n  .border-box {\n    box-sizing: border-box;\n  }\n`\n\nexport default function Article({ html: brief }) {\n  const [sp1Overflow, setSp1Overflow] = useState(false)\n  const [sp2Overflow, setSp2Overflow] = useState(false)\n  const [sp3Overflow, setSp3Overflow] = useState(false)\n  const [sp4Overflow, setSp4Overflow] = useState(false)\n  return (\n    <Layout>\n      <Html>{brief}</Html>\n      <Paragraph>\n        \"Everything in CSS has a box around it, and understanding these boxes is\n        key to being able to create layouts with CSS, or to align items with\n        other items.\" [\n        <A\n          href=\"https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/The_box_model\"\n          target=\"_blank\"\n        >\n          MDN\n        </A>\n        ]\n      </Paragraph>\n      <Img name=\"BoxModelMdn\" />\n      <Paragraph>\n        The box model is characterized by margin*, border, padding, and content.\n        Although affecting the size of the elements in some scenarios, margins\n        are never within box-sizing of the elements.\n      </Paragraph>\n      <Subtitle>box-sizing</Subtitle>\n      <Paragraph>\n        The box model is quite related to box-sizing. The last defines how the\n        definition of sizes are calculated. For instance, lets assume we always\n        have a container with 200px x 200px (width x height) set position as{\" \"}\n        <strong>relative</strong>.\n      </Paragraph>\n      <ul>\n        <li>\n          <Subtitle>box-sizing: content-box</Subtitle>\n          <Code\n            theme={codeTheme}\n            code={`\n.container {\n  position: relative;\n  height: 200px;\n  width: 200px;\n  background-color: blue;\n}\n\n.container > div {\n  /* either */\n  width: 100%;\n  /* or width: 200px; */\n  background-color: green;\n}\n\n.content-box {\n  box-sizing: content-box;\n}\n          `.trim()}\n          />\n          <Code\n            theme={codeTheme}\n            code={`\n<div class=\"container\">\n  <div class=\"content-box\">How am I supposed to look?</div>\n</div>\n              `.trim()}\n          />\n          <div className=\"wrapper\">\n            <div className=\"container\">\n              <div className=\"content-box\">How am I supposed to look?</div>\n            </div>\n          </div>\n          <Paragraph>\n            The content is still within container. Good! But, what would\n            happened if we added a padding or border?\n          </Paragraph>\n\n          <Code\n            theme={codeTheme}\n            code={`\n.container {\n  position: relative;\n  height: 200px;\n  width: 200px;\n  background-color: blue;\n}\n\n.container > div {\n  /* either */\n  width: 100%;\n  /* or width: 200px; */\n  background-color: green;\n}\n\n.content-box {\n  box-sizing: content-box;\n}\n\n.padded {\n  /* this means 10px each direction (top, right, bottom, left) */\n  padding: 10px;\n}\n          `.trim()}\n          />\n          <Code\n            theme={codeTheme}\n            code={`\n<div class=\"container\">\n  <div class=\"content-box padded\">How am I supposed to look?</div>\n</div>\n              `.trim()}\n          />\n          <div className=\"wrapper\">\n            <div\n              className=\"container\"\n              style={{ ...(sp1Overflow && { overflow: \"auto\" }) }}\n            >\n              <div className=\"content-box padded\">\n                How am I supposed to look padded?\n              </div>\n            </div>\n            <button type=\"button\" onClick={() => setSp1Overflow(val => !val)}>\n              {sp1Overflow\n                ? 'Click to remove \"overflow: auto;\" from container'\n                : 'Click to add \"overflow: auto;\" to container'}\n            </button>\n          </div>\n\n          <Code\n            theme={codeTheme}\n            code={`\n.container {\n  position: relative;\n  height: 200px;\n  width: 200px;\n  background-color: blue;\n}\n\n.container > div {\n  /* either */\n  width: 100%;\n  /* or width: 200px; */\n  background-color: green;\n}\n\n.content-box {\n  box-sizing: content-box;\n}\n\n.bordered {\n  /* this means 5px each direction (top, right, bottom, left) */\n  border: 5px solid red;\n}\n          `.trim()}\n          />\n          <Code\n            theme={codeTheme}\n            code={`\n<div class=\"container\">\n  <div class=\"content-box bordered\">How am I supposed to look?</div>\n</div>\n              `.trim()}\n          />\n          <div className=\"wrapper\">\n            <div\n              className=\"container\"\n              style={{ ...(sp2Overflow && { overflow: \"auto\" }) }}\n            >\n              <div className=\"content-box bordered\">\n                How am I supposed to look with border?\n              </div>\n            </div>\n            <button type=\"button\" onClick={() => setSp2Overflow(val => !val)}>\n              {sp2Overflow\n                ? 'Click to remove \"overflow: auto;\" from container'\n                : 'Click to add \"overflow: auto;\" to container'}\n            </button>\n          </div>\n        </li>\n        <li>\n          <Subtitle>box-sizing: border-box</Subtitle>\n          <Paragraph>\n            From previous examples, there is a big lesson to take in. If an HTML\n            element has its box-sizing set to <strong>content-box</strong>{\" \"}\n            anything changed out of the content area affects the overall size of\n            the element. If the container that retains the element has{\" \"}\n            <strong>overflow: auto;</strong> in its styles, it may create\n            scrollbars.\n          </Paragraph>\n          <Paragraph>\n            <strong>Note:</strong>\n            it worth mentioning that the <strong>padding-box</strong> exists\n            only for Firefox at the moment. Then, please, don't use it.\n          </Paragraph>\n          <Img name=\"CanIUsePaddingBox\" />\n          <Paragraph>Let's see how border-box manages the layout.</Paragraph>\n\n          <Code\n            theme={codeTheme}\n            code={`\n.container {\n  position: relative;\n  height: 200px;\n  width: 200px;\n  background-color: blue;\n}\n\n.container > div {\n  /* either */\n  width: 100%;\n  /* or width: 200px; */\n  background-color: green;\n}\n\n.padded {\n  /* this means 10px each direction (top, right, bottom, left) */\n  padding: 10px;\n}\n\n.border-box {\n  box-sizing: border-box;\n}\n          `.trim()}\n          />\n          <Code\n            theme={codeTheme}\n            code={`\n<div class=\"container\">\n  <div class=\"border-box padded\">How am I supposed to look?</div>\n</div>\n              `.trim()}\n          />\n          <div className=\"wrapper\">\n            <div\n              className=\"container\"\n              style={{ ...(sp3Overflow && { overflow: \"auto\" }) }}\n            >\n              <div className=\"border-box padded\">\n                How am I supposed to look padded?\n              </div>\n            </div>\n            <button type=\"button\" onClick={() => setSp3Overflow(val => !val)}>\n              {sp3Overflow\n                ? 'Click to remove \"overflow: auto;\" from container'\n                : 'Click to add \"overflow: auto;\" to container'}\n            </button>\n            <p>\n              Even though you are toggling overflow, the element size is\n              self-contained in its box-sizing. Then, it does not create\n              scrollbars.\n            </p>\n          </div>\n\n          <Code\n            theme={codeTheme}\n            code={`\n.container {\n  position: relative;\n  height: 200px;\n  width: 200px;\n  background-color: blue;\n}\n\n.container > div {\n  /* either */\n  width: 100%;\n  /* or width: 200px; */\n  background-color: green;\n}\n\n.bordered {\n  /* this means 5px each direction (top, right, bottom, left) */\n  border: 5px solid red;\n}\n\n.border-box {\n  box-sizing: border-box;\n}\n          `.trim()}\n          />\n          <Code\n            theme={codeTheme}\n            code={`\n<div class=\"container\">\n  <div class=\"border-box bordered\">How am I supposed to look?</div>\n</div>\n              `.trim()}\n          />\n          <div className=\"wrapper\">\n            <div\n              className=\"container\"\n              style={{ ...(sp4Overflow && { overflow: \"auto\" }) }}\n            >\n              <div className=\"border-box bordered\">\n                How am I supposed to look with border?\n              </div>\n            </div>\n            <button type=\"button\" onClick={() => setSp4Overflow(val => !val)}>\n              {sp4Overflow\n                ? 'Click to remove \"overflow: auto;\" from container'\n                : 'Click to add \"overflow: auto;\" to container'}\n            </button>\n            <p>\n              Even though you are toggling overflow, the element size is\n              self-contained in its box-sizing. Then, it does not create\n              scrollbars.\n            </p>\n          </div>\n        </li>\n      </ul>\n      <Paragraph>\n        \"Note: It is often useful to set box-sizing to border-box to layout\n        elements. This makes dealing with the sizes of elements much easier, and\n        generally eliminates a number of pitfalls you can stumble on while\n        laying out your content.\" [\n        <A\n          href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing\"\n          target=\"_blank\"\n        >\n          MDN\n        </A>\n        ]\n      </Paragraph>\n      <Subtitle>Pitfall</Subtitle>\n      <Paragraph>\n        The problem with margins come to the point we need to specify fixed\n        sizes (different from %), even if the sum of internal elements matches\n        the container. In the examples below, we will see that container and\n        content are set to <strong>width: 200px;</strong>. Still, the content\n        which has margins forces scrollbars in the container.\n      </Paragraph>\n      <Code\n        theme={codeTheme}\n        code={`\n.container {\n  position: relative;\n  height: 200px;\n  width: 200px;\n  background-color: blue;\n}\n\n.container > div {\n  /* either */\n  width: 100%;\n  /* or width: 200px; */\n  background-color: green;\n}\n\n.padded {\n  /* this means 10px each direction (top, right, bottom, left) */\n  padding: 10px;\n}\n\n.bordered {\n  /* this means 5px each direction (top, right, bottom, left) */\n  border: 5px solid red;\n}\n\n.overflow {\n  overflow: auto;\n}\n\n.border-box {\n  box-sizing: border-box;\n}\n          `.trim()}\n      />\n      <Code\n        theme={codeTheme}\n        code={`\n<div class=\"container overflow\">\n  <div class=\"border-box padded bordered\" style=\"width: 200px;\">How am I supposed to look?</div>\n</div>\n              `.trim()}\n      />\n      <div className=\"wrapper\">\n        <div className=\"container overflow\">\n          <div\n            className=\"border-box padded bordered\"\n            style={{ width: \"200px\" }}\n          >\n            How am I supposed to look padded?\n          </div>\n        </div>\n      </div>\n      <Code\n        theme={codeTheme}\n        code={`\n.container {\n  position: relative;\n  height: 200px;\n  width: 200px;\n  background-color: blue;\n}\n\n.container > div {\n  /* either */\n  width: 100%;\n  /* or width: 200px; */\n  background-color: green;\n}\n\n.padded {\n  /* this means 10px each direction (top, right, bottom, left) */\n  padding: 10px;\n}\n\n.bordered {\n  /* this means 5px each direction (top, right, bottom, left) */\n  border: 5px solid red;\n}\n\n.with-margins {\n  margin: 10px;\n}\n\n.overflow {\n  overflow: auto;\n}\n\n.border-box {\n  box-sizing: border-box;\n}\n          `.trim()}\n      />\n      <Code\n        theme={codeTheme}\n        code={`\n<div class=\"container overflow\">\n  <div class=\"border-box padded bordered with-margins\" style=\"width: 200px;\">How am I supposed to look?</div>\n</div>\n              `.trim()}\n      />\n      <div className=\"wrapper\">\n        <div className=\"container overflow\">\n          <div\n            className=\"border-box padded bordered with-margins\"\n            style={{ width: \"200px\" }}\n          >\n            How am I supposed to look with border?\n          </div>\n        </div>\n      </div>\n      <Img name=\"BoxModel\" />\n      <Subtitle>Conclusion</Subtitle>\n      <Paragraph>\n        Each <strong>box-sizing</strong> has its context of problems to tackle.\n        In general, it is recommended to use{\" \"}\n        <strong>box-sizing: border-box;</strong> preventing side-effects in the\n        containers. Help building a better web experience.{\" \"}\n        <A\n          href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing\"\n          target=\"_blank\"\n        >\n          [box-sizing]\n        </A>\n      </Paragraph>\n      <Subtitle />\n      <References>\n        <A\n          href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Introduction_to_the_CSS_box_model\"\n          target=\"_blank\"\n        >\n          Introduction to the CSS basic box model\n        </A>\n        <A\n          href=\"https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/The_box_model\"\n          target=\"_blank\"\n        >\n          The box model\n        </A>\n        <A\n          href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing\"\n          target=\"_blank\"\n        >\n          box-sizing\n        </A>\n      </References>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}