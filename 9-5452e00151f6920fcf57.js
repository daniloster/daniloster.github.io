(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{"2GVm":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return p}));var o=n("q1tI"),a=n.n(o),r=n("vOnD"),i=n("G2tH"),l=n("ebhC"),d=n("/Bgi"),c=n("oqi6"),s=n("uzDE"),m=n("eATi"),b=n("DR7b"),u="prism",h=r.a.div.withConfig({displayName:"BoxModel__Layout",componentId:"ht6yae-0"})([".wrapper{border:1px dotted darkgrey;padding:15px;}.wrapper + .wrapper{margin-top:15px;}.container{position:relative;height:200px;width:200px;background-color:blue;}.container > div{width:100%;background-color:green;}.content-box{box-sizing:content-box;}.padded{padding:10px;}.bordered{border:5px solid red;}.with-margins{margin:10px;}.overflow{overflow:auto;}.border-box{box-sizing:border-box;}"]);function p(e){var t=e.html,n=Object(o.useState)(!1),r=n[0],p=n[1],g=Object(o.useState)(!1),x=g[0],f=g[1],v=Object(o.useState)(!1),w=v[0],E=v[1],k=Object(o.useState)(!1),z=k[0],y=k[1];return a.a.createElement(h,null,a.a.createElement(b.default,null,t),a.a.createElement(i.default,null,'"Everything in CSS has a box around it, and understanding these boxes is key to being able to create layouts with CSS, or to align items with other items." [',a.a.createElement(c.default,{href:"https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/The_box_model",target:"_blank"},"MDN"),"]"),a.a.createElement(m.default,{name:"BoxModelMdn"}),a.a.createElement(i.default,null,"The box model is characterized by margin*, border, padding, and content. Although affecting the size of the elements in some scenarios, margins are never within box-sizing of the elements."),a.a.createElement(l.default,null,"box-sizing"),a.a.createElement(i.default,null,"The box model is quite related to box-sizing. The last defines how the definition of sizes are calculated. For instance, lets assume we always have a container with 200px x 200px (width x height) set position as"," ",a.a.createElement("strong",null,"relative"),"."),a.a.createElement("ul",null,a.a.createElement("li",null,a.a.createElement(l.default,null,"box-sizing: content-box"),a.a.createElement(s.default,{theme:u,code:"\n.container {\n  position: relative;\n  height: 200px;\n  width: 200px;\n  background-color: blue;\n}\n\n.container > div {\n  /* either */\n  width: 100%;\n  /* or width: 200px; */\n  background-color: green;\n}\n\n.content-box {\n  box-sizing: content-box;\n}\n          ".trim()}),a.a.createElement(s.default,{theme:u,code:'\n<div class="container">\n  <div class="content-box">How am I supposed to look?</div>\n</div>\n              '.trim()}),a.a.createElement("div",{className:"wrapper"},a.a.createElement("div",{className:"container"},a.a.createElement("div",{className:"content-box"},"How am I supposed to look?"))),a.a.createElement(i.default,null,"The content is still within container. Good! But, what would happened if we added a padding or border?"),a.a.createElement(s.default,{theme:u,code:"\n.container {\n  position: relative;\n  height: 200px;\n  width: 200px;\n  background-color: blue;\n}\n\n.container > div {\n  /* either */\n  width: 100%;\n  /* or width: 200px; */\n  background-color: green;\n}\n\n.content-box {\n  box-sizing: content-box;\n}\n\n.padded {\n  /* this means 10px each direction (top, right, bottom, left) */\n  padding: 10px;\n}\n          ".trim()}),a.a.createElement(s.default,{theme:u,code:'\n<div class="container">\n  <div class="content-box padded">How am I supposed to look?</div>\n</div>\n              '.trim()}),a.a.createElement("div",{className:"wrapper"},a.a.createElement("div",{className:"container",style:Object.assign({},r&&{overflow:"auto"})},a.a.createElement("div",{className:"content-box padded"},"How am I supposed to look padded?")),a.a.createElement("button",{type:"button",onClick:function(){return p((function(e){return!e}))}},r?'Click to remove "overflow: auto;" from container':'Click to add "overflow: auto;" to container')),a.a.createElement(s.default,{theme:u,code:"\n.container {\n  position: relative;\n  height: 200px;\n  width: 200px;\n  background-color: blue;\n}\n\n.container > div {\n  /* either */\n  width: 100%;\n  /* or width: 200px; */\n  background-color: green;\n}\n\n.content-box {\n  box-sizing: content-box;\n}\n\n.bordered {\n  /* this means 5px each direction (top, right, bottom, left) */\n  border: 5px solid red;\n}\n          ".trim()}),a.a.createElement(s.default,{theme:u,code:'\n<div class="container">\n  <div class="content-box bordered">How am I supposed to look?</div>\n</div>\n              '.trim()}),a.a.createElement("div",{className:"wrapper"},a.a.createElement("div",{className:"container",style:Object.assign({},x&&{overflow:"auto"})},a.a.createElement("div",{className:"content-box bordered"},"How am I supposed to look with border?")),a.a.createElement("button",{type:"button",onClick:function(){return f((function(e){return!e}))}},x?'Click to remove "overflow: auto;" from container':'Click to add "overflow: auto;" to container'))),a.a.createElement("li",null,a.a.createElement(l.default,null,"box-sizing: border-box"),a.a.createElement(i.default,null,"From previous examples, there is a big lesson to take in. If an HTML element has its box-sizing set to ",a.a.createElement("strong",null,"content-box")," ","anything changed out of the content area affects the overall size of the element. If the container that retains the element has"," ",a.a.createElement("strong",null,"overflow: auto;")," in its styles, it may create scrollbars."),a.a.createElement(i.default,null,a.a.createElement("strong",null,"Note:"),"it worth mentioning that the ",a.a.createElement("strong",null,"padding-box")," exists only for Firefox at the moment. Then, please, don't use it."),a.a.createElement(m.default,{name:"CanIUsePaddingBox"}),a.a.createElement(i.default,null,"Let's see how border-box manages the layout."),a.a.createElement(s.default,{theme:u,code:"\n.container {\n  position: relative;\n  height: 200px;\n  width: 200px;\n  background-color: blue;\n}\n\n.container > div {\n  /* either */\n  width: 100%;\n  /* or width: 200px; */\n  background-color: green;\n}\n\n.padded {\n  /* this means 10px each direction (top, right, bottom, left) */\n  padding: 10px;\n}\n\n.border-box {\n  box-sizing: border-box;\n}\n          ".trim()}),a.a.createElement(s.default,{theme:u,code:'\n<div class="container">\n  <div class="border-box padded">How am I supposed to look?</div>\n</div>\n              '.trim()}),a.a.createElement("div",{className:"wrapper"},a.a.createElement("div",{className:"container",style:Object.assign({},w&&{overflow:"auto"})},a.a.createElement("div",{className:"border-box padded"},"How am I supposed to look padded?")),a.a.createElement("button",{type:"button",onClick:function(){return E((function(e){return!e}))}},w?'Click to remove "overflow: auto;" from container':'Click to add "overflow: auto;" to container'),a.a.createElement("p",null,"Even though you are toggling overflow, the element size is self-contained in its box-sizing. Then, it does not create scrollbars.")),a.a.createElement(s.default,{theme:u,code:"\n.container {\n  position: relative;\n  height: 200px;\n  width: 200px;\n  background-color: blue;\n}\n\n.container > div {\n  /* either */\n  width: 100%;\n  /* or width: 200px; */\n  background-color: green;\n}\n\n.bordered {\n  /* this means 5px each direction (top, right, bottom, left) */\n  border: 5px solid red;\n}\n\n.border-box {\n  box-sizing: border-box;\n}\n          ".trim()}),a.a.createElement(s.default,{theme:u,code:'\n<div class="container">\n  <div class="border-box bordered">How am I supposed to look?</div>\n</div>\n              '.trim()}),a.a.createElement("div",{className:"wrapper"},a.a.createElement("div",{className:"container",style:Object.assign({},z&&{overflow:"auto"})},a.a.createElement("div",{className:"border-box bordered"},"How am I supposed to look with border?")),a.a.createElement("button",{type:"button",onClick:function(){return y((function(e){return!e}))}},z?'Click to remove "overflow: auto;" from container':'Click to add "overflow: auto;" to container'),a.a.createElement("p",null,"Even though you are toggling overflow, the element size is self-contained in its box-sizing. Then, it does not create scrollbars.")))),a.a.createElement(i.default,null,'"Note: It is often useful to set box-sizing to border-box to layout elements. This makes dealing with the sizes of elements much easier, and generally eliminates a number of pitfalls you can stumble on while laying out your content." [',a.a.createElement(c.default,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing",target:"_blank"},"MDN"),"]"),a.a.createElement(l.default,null,"Pitfall"),a.a.createElement(i.default,null,"The problem with margins come to the point we need to specify fixed sizes (different from %), even if the sum of internal elements matches the container. In the examples below, we will see that container and content are set to ",a.a.createElement("strong",null,"width: 200px;"),". Still, the content which has margins forces scrollbars in the container."),a.a.createElement(s.default,{theme:u,code:"\n.container {\n  position: relative;\n  height: 200px;\n  width: 200px;\n  background-color: blue;\n}\n\n.container > div {\n  /* either */\n  width: 100%;\n  /* or width: 200px; */\n  background-color: green;\n}\n\n.padded {\n  /* this means 10px each direction (top, right, bottom, left) */\n  padding: 10px;\n}\n\n.bordered {\n  /* this means 5px each direction (top, right, bottom, left) */\n  border: 5px solid red;\n}\n\n.overflow {\n  overflow: auto;\n}\n\n.border-box {\n  box-sizing: border-box;\n}\n          ".trim()}),a.a.createElement(s.default,{theme:u,code:'\n<div class="container overflow">\n  <div class="border-box padded bordered" style="width: 200px;">How am I supposed to look?</div>\n</div>\n              '.trim()}),a.a.createElement("div",{className:"wrapper"},a.a.createElement("div",{className:"container overflow"},a.a.createElement("div",{className:"border-box padded bordered",style:{width:"200px"}},"How am I supposed to look padded?"))),a.a.createElement(s.default,{theme:u,code:"\n.container {\n  position: relative;\n  height: 200px;\n  width: 200px;\n  background-color: blue;\n}\n\n.container > div {\n  /* either */\n  width: 100%;\n  /* or width: 200px; */\n  background-color: green;\n}\n\n.padded {\n  /* this means 10px each direction (top, right, bottom, left) */\n  padding: 10px;\n}\n\n.bordered {\n  /* this means 5px each direction (top, right, bottom, left) */\n  border: 5px solid red;\n}\n\n.with-margins {\n  margin: 10px;\n}\n\n.overflow {\n  overflow: auto;\n}\n\n.border-box {\n  box-sizing: border-box;\n}\n          ".trim()}),a.a.createElement(s.default,{theme:u,code:'\n<div class="container overflow">\n  <div class="border-box padded bordered with-margins" style="width: 200px;">How am I supposed to look?</div>\n</div>\n              '.trim()}),a.a.createElement("div",{className:"wrapper"},a.a.createElement("div",{className:"container overflow"},a.a.createElement("div",{className:"border-box padded bordered with-margins",style:{width:"200px"}},"How am I supposed to look with border?"))),a.a.createElement(m.default,{name:"BoxModel"}),a.a.createElement(l.default,null,"Conclusion"),a.a.createElement(i.default,null,"Each ",a.a.createElement("strong",null,"box-sizing")," has its context of problems to tackle. In general, it is recommended to use"," ",a.a.createElement("strong",null,"box-sizing: border-box;")," preventing side-effects in the containers. Help building a better web experience."," ",a.a.createElement(c.default,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing",target:"_blank"},"[box-sizing]")),a.a.createElement(l.default,null),a.a.createElement(d.default,null,a.a.createElement(c.default,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Introduction_to_the_CSS_box_model",target:"_blank"},"Introduction to the CSS basic box model"),a.a.createElement(c.default,{href:"https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/The_box_model",target:"_blank"},"The box model"),a.a.createElement(c.default,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing",target:"_blank"},"box-sizing")))}}}]);
//# sourceMappingURL=9-5452e00151f6920fcf57.js.map